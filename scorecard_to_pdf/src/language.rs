pub struct Language {
	pub round: String,
	pub group: String,
	pub scram: String,
	pub result: String,
	pub judge: String,
	pub comp: String,
	pub extra_attempts: String,
	pub time_limit: String,
	pub cumulative_limit: String,
	pub for_scl: String,
	pub and_scl: String,
	pub curoff: String,
	pub multi_tl: String,
	pub e333: String,
	pub e444: String,
	pub e555: String,
	pub e666: String,
	pub e777: String,
	pub e222: String,
	pub e333oh: String,
	pub eclock: String,
	pub eminx: String,
	pub epyram: String,
	pub e333bf: String,
	pub e444bf: String,
	pub e555bf: String,
	pub e333mbf: String,
	pub esq1: String,
	pub eskewb: String,
}

impl Language {
	pub fn english() -> Self {
		Language {
			round: "Round".to_string(),
			group: "Group".to_string(),
			scram: "scr".to_string(),
			result: "result".to_string(),
			judge: "judge".to_string(),
			comp: "comp".to_string(),
			extra_attempts: "Extra attempts".to_string(),
			time_limit: "Time limit".to_string(),
			cumulative_limit: "Cumulative limit".to_string(),
			for_scl: "for".to_string(),
			and_scl: "and".to_string(),
			curoff: "Two attempts to get below".to_string(),
			multi_tl: "10:00 per cube up to 60:00".to_string(),
			e333: "3x3x3 Cube".to_string(),
			e444: "4x4x4 Cube".to_string(),
			e555: "5x5x5 Cube".to_string(),
			e666: "6x6x6 Cube".to_string(),
			e777: "7x7x7 Cube".to_string(),
			e222: "2x2x2 Cube".to_string(),
			e333oh: "3x3x3 One Handed".to_string(),
			eclock: "Clock".to_string(),
			eminx: "Megaminx".to_string(),
			epyram: "Pyraminx".to_string(),
			e333bf: "3x3x3 Blindfolded".to_string(),
			e444bf: "4x4x4 Blindfolded".to_string(),
			e555bf: "5x5x5 Blindfolded".to_string(),
			e333mbf: "3x3x3 Multi-Blind".to_string(),
			esq1: "Square 1".to_string(),
			eskewb: "Skewb".to_string(),
		}
	}
}
